# -*- coding: utf-8 -*-
"""generate_guest_json

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UV8APmf4M5BwFzRBzjSSH7tyib7nCeEj
"""

from icalendar import Calendar
import pandas as pd
import requests
import os
from datetime import datetime
import json

# Load the CSV with iCal links
import os

base_dir = os.path.dirname(os.path.abspath(__file__))
ical_csv_path = os.path.join(base_dir, "..", "ical_links.csv")
output_dir = os.path.join(base_dir, "..", "data")
  # adjust if needed
ical_df = pd.read_csv(ical_csv_path)

# Output folder for JSONs
output_dir = "data"
os.makedirs(output_dir, exist_ok=True)

# Helper function to parse .ics and find the next event
def get_next_event(ical_url):
    try:
        r = requests.get(ical_url, timeout=10)
        cal = Calendar.from_ical(r.text)
        today = datetime.utcnow()

        events = []
        for component in cal.walk():
            if component.name == "VEVENT":
                start = component.get("DTSTART").dt
                end = component.get("DTEND").dt
                if isinstance(start, datetime) and start >= today:
                    events.append((start, end, str(component.get("SUMMARY"))))

        if not events:
            return None

        # Sort by start date
        events.sort(key=lambda x: x[0])
        start, end, summary = events[0]
        nights = (end - start).days
        return {
            "name": summary,
            "checkin": start.strftime("%B %d, %Y, %I:%M %p"),
            "checkout": end.strftime("%B %d, %Y, %I:%M %p"),
            "nights": nights
        }
    except Exception as e:
        print(f"Error processing {ical_url}: {e}")
        return None

# Process each row
for _, row in ical_df.iterrows():
    property_name = row["Property Name"]
    ical_url = row["URL"]
    guest_info = get_next_event(ical_url)

    if guest_info:
        filename = f"{property_name.lower().replace(' ', '-')}-guest.json"
        file_path = os.path.join(output_dir, filename)
        with open(file_path, "w") as f:
            json.dump(guest_info, f, indent=2)
        print(f"Updated: {filename}")